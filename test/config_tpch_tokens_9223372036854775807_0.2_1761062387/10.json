{
  "execTime": 1946.7997550964355,
  "config": null,
  "plan": "Limit  (cost=644592.06..644592.09 rows=10 width=202)\n  ->  Sort  (cost=644592.06..645289.32 rows=278902 width=202)\n        Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC\n        ->  Finalize HashAggregate  (cost=635078.82..638565.09 rows=278902 width=202)\n              Group Key: customer.c_custkey, nation.n_name\n              ->  Gather  (cost=608060.22..632754.64 rows=232418 width=202)\n                    Workers Planned: 2\n                    ->  Partial HashAggregate  (cost=607060.22..608512.84 rows=116209 width=202)\n                          Group Key: customer.c_custkey, nation.n_name\n                          ->  Hash Join  (cost=28124.35..605607.61 rows=116209 width=182)\n                                Hash Cond: (customer.c_nationkey = nation.n_nationkey)\n                                ->  Parallel Hash Join  (cost=28122.79..605249.29 rows=116209 width=160)\n                                      Hash Cond: (orders.o_custkey = customer.c_custkey)\n                                      ->  Nested Loop  (cost=3176.54..579997.99 rows=116209 width=16)\n                                            ->  Parallel Bitmap Heap Scan on orders  (cost=3176.10..135390.04 rows=116930 width=8)\n                                                  Recheck Cond: ((o_orderdate >= '1994-01-01'::date) AND (o_orderdate < '1994-04-01 00:00:00'::timestamp without time zone))\n                                                  ->  Bitmap Index Scan on o_od  (cost=0.00..3105.94 rows=280631 width=0)\n                                                        Index Cond: ((o_orderdate >= '1994-01-01'::date) AND (o_orderdate < '1994-04-01 00:00:00'::timestamp without time zone))\n                                            ->  Index Scan using l_ok on lineitem  (cost=0.44..3.61 rows=19 width=16)\n                                                  Index Cond: (l_orderkey = orders.o_orderkey)\n                                                  Filter: (l_returnflag = 'R'::bpchar)\n                                      ->  Parallel Hash  (cost=21040.00..21040.00 rows=312500 width=148)\n                                            ->  Parallel Seq Scan on customer  (cost=0.00..21040.00 rows=312500 width=148)\n                                ->  Hash  (cost=1.25..1.25 rows=25 width=30)\n                                      ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)\nJIT:\n  Functions: 30\n  Options: Inlining true, Optimization true, Expressions true, Deforming true"
}