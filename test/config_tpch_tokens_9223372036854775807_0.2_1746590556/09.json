{
  "execTime": 124.44376945495605,
  "config": null,
  "plan": "Limit  (cost=29204.47..29209.68 rows=1 width=90)\n  ->  GroupAggregate  (cost=29204.47..342213.41 rows=60150 width=90)\n        Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))\n        ->  Incremental Sort  (cost=29204.47..333904.14 rows=423258 width=81)\n              Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC\n              Presorted Key: nation.n_name\n              ->  Nested Loop  (cost=16751.16..281634.61 rows=423258 width=81)\n                    ->  Nested Loop  (cost=16750.73..92756.74 rows=423258 width=53)\n                          Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)\n                          ->  Gather Merge  (cost=16750.29..23338.10 rows=56564 width=48)\n                                Workers Planned: 2\n                                ->  Sort  (cost=15750.27..15809.19 rows=23568 width=48)\n                                      Sort Key: nation.n_name\n                                      ->  Hash Join  (cost=448.99..14038.70 rows=23568 width=48)\n                                            Hash Cond: (supplier.s_nationkey = nation.n_nationkey)\n                                            ->  Hash Join  (cost=447.43..13964.78 rows=23568 width=26)\n                                                  Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)\n                                                  ->  Nested Loop  (cost=0.42..13455.89 rows=23568 width=18)\n                                                        ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=5892 width=4)\n                                                              Filter: ((p_name)::text ~~ '%ghost%'::text)\n                                                        ->  Index Scan using idx_partsupp_ps_partkey_2 on partsupp  (cost=0.42..1.37 rows=4 width=14)\n                                                              Index Cond: (ps_partkey = part.p_partkey)\n                                                  ->  Hash  (cost=322.00..322.00 rows=10000 width=8)\n                                                        ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8)\n                                            ->  Hash  (cost=1.25..1.25 rows=25 width=30)\n                                                  ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)\n                          ->  Index Scan using idx_lineitem_l_partkey_10 on lineitem  (cost=0.43..1.21 rows=1 width=29)\n                                Index Cond: (l_partkey = partsupp.ps_partkey)\n                                Filter: (partsupp.ps_suppkey = l_suppkey)\n                    ->  Memoize  (cost=0.44..0.46 rows=1 width=8)\n                          Cache Key: lineitem.l_orderkey\n                          Cache Mode: logical\n                          ->  Index Scan using orders_pkey on orders  (cost=0.43..0.45 rows=1 width=8)\n                                Index Cond: (o_orderkey = lineitem.l_orderkey)"
}