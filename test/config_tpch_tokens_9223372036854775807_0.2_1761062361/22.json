{
  "execTime": 309.08775329589844,
  "config": null,
  "plan": "Limit  (cost=54477.50..54479.15 rows=1 width=72)\n  InitPlan 1 (returns $1)\n    ->  Finalize Aggregate  (cost=27143.21..27143.22 rows=1 width=32)\n          ->  Gather  (cost=27142.99..27143.20 rows=2 width=32)\n                Workers Planned: 2\n                ->  Partial Aggregate  (cost=26142.99..26143.00 rows=1 width=32)\n                      ->  Parallel Seq Scan on customer customer_1  (cost=0.00..26118.12 rows=9944 width=6)\n                            Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{10,14,11,30,29,21,12}'::text[])))\n  ->  GroupAggregate  (cost=27334.28..33434.47 rows=3693 width=72)\n        Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)\n        ->  Nested Loop Anti Join  (cost=27334.28..33342.15 rows=3693 width=38)\n              ->  Gather Merge  (cost=27333.85..28352.93 rows=8750 width=26)\n                    Workers Planned: 2\n                    Params Evaluated: $1\n                    ->  Sort  (cost=26333.82..26342.94 rows=3646 width=26)\n                          Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))\n                          ->  Parallel Seq Scan on customer  (cost=0.00..26118.12 rows=3646 width=26)\n                                Filter: ((c_acctbal > $1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{10,14,11,30,29,21,12}'::text[])))\n              ->  Index Only Scan using o_ck on orders  (cost=0.43..1.85 rows=17 width=4)\n                    Index Cond: (o_custkey = customer.c_custkey)"
}