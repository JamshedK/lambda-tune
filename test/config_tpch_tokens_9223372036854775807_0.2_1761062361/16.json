{
  "execTime": 1489.9697303771973,
  "config": null,
  "plan": "Limit  (cost=159625.09..159625.10 rows=1 width=44)\n  ->  Sort  (cost=159625.09..159825.61 rows=80205 width=44)\n        Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size\n        ->  GroupAggregate  (cost=120618.66..159224.07 rows=80205 width=44)\n              Group Key: part.p_brand, part.p_type, part.p_size\n              ->  Gather Merge  (cost=120618.66..155432.82 rows=298920 width=40)\n                    Workers Planned: 2\n                    ->  Sort  (cost=119618.64..119930.01 rows=124550 width=40)\n                          Sort Key: part.p_brand, part.p_type, part.p_size\n                          ->  Parallel Hash Join  (cost=33411.95..109077.74 rows=124550 width=40)\n                                Hash Cond: (partsupp.ps_partkey = part.p_partkey)\n                                ->  Parallel Index Only Scan using ps_pk_sk on partsupp  (cost=1734.44..75213.84 rows=832911 width=8)\n                                      Filter: (NOT (hashed SubPlan 1))\n                                      SubPlan 1\n                                        ->  Seq Scan on supplier  (cost=0.00..1734.00 rows=5 width=4)\n                                              Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)\n                                ->  Parallel Hash  (cost=30898.67..30898.67 rows=62307 width=40)\n                                      ->  Parallel Seq Scan on part  (cost=0.00..30898.67 rows=62307 width=40)\n                                            Filter: ((p_brand <> 'Brand#32'::bpchar) AND ((p_type)::text !~~ 'SMALL BURNISHED%'::text) AND (p_size = ANY ('{3,38,9,4,12,10,42,40}'::integer[])))\nJIT:\n  Functions: 24\n  Options: Inlining false, Optimization false, Expressions true, Deforming true"
}