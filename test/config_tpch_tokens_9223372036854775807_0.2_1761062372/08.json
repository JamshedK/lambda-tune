{
  "execTime": 4381.831169128418,
  "config": null,
  "plan": "Limit  (cost=107297.48..108049.19 rows=1 width=64)\n  ->  GroupAggregate  (cost=107297.48..1915900.47 rows=2406 width=64)\n        Group Key: EXTRACT(year FROM orders.o_orderdate)\n        ->  Nested Loop  (cost=107297.48..1915611.47 rows=12044 width=70)\n              Join Filter: (supplier.s_nationkey = n2.n_nationkey)\n              ->  Nested Loop  (cost=107297.48..1911230.39 rows=12044 width=20)\n                    ->  Nested Loop  (cost=107297.19..1907526.31 rows=12044 width=20)\n                          ->  Nested Loop  (cost=107296.76..1440520.53 rows=1813634 width=24)\n                                ->  Gather Merge  (cost=107296.32..160111.77 rows=453482 width=8)\n                                      Workers Planned: 2\n                                      ->  Sort  (cost=106296.30..106768.67 rows=188951 width=8)\n                                            Sort Key: (EXTRACT(year FROM orders.o_orderdate))\n                                            ->  Nested Loop  (cost=2.94..89736.96 rows=188951 width=8)\n                                                  ->  Hash Join  (cost=2.51..22839.38 rows=62500 width=4)\n                                                        Hash Cond: (customer.c_nationkey = n1.n_nationkey)\n                                                        ->  Parallel Seq Scan on customer  (cost=0.00..21040.00 rows=312500 width=8)\n                                                        ->  Hash  (cost=2.45..2.45 rows=5 width=4)\n                                                              ->  Hash Join  (cost=1.07..2.45 rows=5 width=4)\n                                                                    Hash Cond: (n1.n_regionkey = region.r_regionkey)\n                                                                    ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)\n                                                                    ->  Hash  (cost=1.06..1.06 rows=1 width=4)\n                                                                          ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)\n                                                                                Filter: (r_name = 'AFRICA'::bpchar)\n                                                  ->  Index Scan using o_ck on orders  (cost=0.43..1.02 rows=5 width=12)\n                                                        Index Cond: (o_custkey = customer.c_custkey)\n                                                        Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))\n                                ->  Index Scan using l_ok on lineitem  (cost=0.44..2.06 rows=76 width=24)\n                                      Index Cond: (l_orderkey = orders.o_orderkey)\n                          ->  Memoize  (cost=0.43..0.46 rows=1 width=4)\n                                Cache Key: lineitem.l_partkey\n                                Cache Mode: logical\n                                ->  Index Scan using p_pk on part  (cost=0.42..0.45 rows=1 width=4)\n                                      Index Cond: (p_partkey = lineitem.l_partkey)\n                                      Filter: ((p_type)::text = 'MEDIUM ANODIZED NICKEL'::text)\n                    ->  Index Scan using s_sk on supplier  (cost=0.29..0.31 rows=1 width=8)\n                          Index Cond: (s_suppkey = lineitem.l_suppkey)\n              ->  Materialize  (cost=0.00..1.38 rows=25 width=30)\n                    ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)\nJIT:\n  Functions: 55\n  Options: Inlining false, Optimization false, Expressions true, Deforming true"
}